# -*- coding: utf-8 -*-
"""AI Resume Analyzer

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KJFKQ4lSmYYP_FTEUsirXbMJ4aiwjop2
"""

import streamlit as st
import fitz  # PyMuPDF for extracting text from PDFs
import spacy
import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

# Load NLP model
nlp = spacy.load("en_core_web_sm")

# Function to extract text from a PDF
def extract_text_from_pdf(pdf_file):
    text = ""
    with fitz.open(pdf_file) as doc:
        for page in doc:
            text += page.get_text("text") + "\n"
    return text

# Function to extract key skills and experience
def analyze_resume(text):
    doc = nlp(text)
    skills = set()
    experience = []

    for ent in doc.ents:
        if ent.label_ in ["ORG", "GPE"]:
            experience.append(ent.text)
        elif ent.label_ in ["NORP", "LANGUAGE"]:
            skills.add(ent.text)

    return list(skills), experience

# Function to match resume with job description
def match_with_job(resume_text, job_text):
    vectorizer = TfidfVectorizer()
    tfidf_matrix = vectorizer.fit_transform([resume_text, job_text])
    similarity = cosine_similarity(tfidf_matrix[0:1], tfidf_matrix[1:2])
    return similarity[0][0]

# Streamlit UI
st.title("üìÑ AI-Powered Resume Analyzer")

uploaded_file = st.file_uploader("üìÇ Upload Your Resume (PDF)", type=["pdf"])
job_description = st.text_area("‚úçÔ∏è Paste Job Description (Optional)")

if uploaded_file is not None:
    st.info("Extracting text from your resume...")

    resume_text = extract_text_from_pdf(uploaded_file)
    skills, experience = analyze_resume(resume_text)

    st.subheader("üîç Extracted Information")
    st.write("**Skills Identified:**", ", ".join(skills))
    st.write("**Companies & Experience:**", ", ".join(experience))

    if job_description:
        match_score = match_with_job(resume_text, job_description)
        st.subheader("üéØ Job Match Score")
        st.write(f"üî¢ Your resume matches **{match_score:.2%}** with the job description!")

    st.success("‚úÖ Resume Analysis Complete!")